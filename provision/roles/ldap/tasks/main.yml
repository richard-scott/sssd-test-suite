# Script taken from:
# https://raw.githubusercontent.com/richm/scripts/master/setupssl2.sh
- name: Fetch SSL setup script
  copy:
    src: setupssl2.sh
    dest: /tmp/setupssl2.sh
    mode: 0700

- name: Create directory server instance
  become: True
  shell: |
    /usr/sbin/setup-ds.pl --silent                          \
      General.SuiteSpotUserID=nobody                        \
      General.SuiteSpotGroup=nobody                         \
      slapd.ServerIdentifier={{ ldap.hostname }}-ldap       \
      slapd.ServerPort=389                                  \
      slapd.Suffix={{ ldap.suffix | quote }}                \
      slapd.RootDN={{ ldap.bind.dn | quote }}               \
      slapd.RootDNPwd={{ ldap.bind.password | quote }}
  register: installed
  args:
    creates: '/etc/dirsrv/slapd-{{ ldap.hostname }}-ldap'

- name: Enable SSL for directory server instance
  become: True
  shell: |
    echo {{ ldap.bind.password | quote }} | /tmp/setupssl2.sh /etc/dirsrv/slapd-{{ ldap.hostname }}-ldap
    touch  /etc/dirsrv/slapd-{{ ldap.hostname }}-ldap/.setupssl2-done
  args:
    creates: '/etc/dirsrv/slapd-{{ ldap.hostname }}-ldap/.setupssl2-done'

- name: Restart directory server
  become: True
  service:
    name: dirsrv.target
    enabled: yes
    state: restarted
  when: installed.changed

- name: Restart directory server instance
  become: True
  service:
    name: dirsrv@master-ldap.service
    enabled: yes
    state: restarted
  when: installed.changed

- name: 'Remove all objects but "cn=Directory Administrators"'
  shell: |
    SEARCH=`ldapsearch -x -D '{{ ldap.bind.dn }}' -w {{ ldap.bind.password }} \
                       -b {{ ldap.suffix }} -s one                            \
                       '(&(objectClass=*)(!(cn=Directory Administrators)))'`
    DN=`echo "$SEARCH" | grep dn | sed "s/dn: \(.*\)/'\1'/" | paste -sd " "`

    echo "$SEARCH" | grep numEntries
    if [ $? -ne 0 ]; then
      echo "Entries are already removed. Nothing to do."
      exit 255
    fi

    eval "ldapdelete -xr -D '{{ ldap.bind.dn }}' -w {{ ldap.bind.password }} $DN"
  register: result
  failed_when: "result.rc != 255 and result.rc != 0"
  changed_when: "result.rc == 0"
